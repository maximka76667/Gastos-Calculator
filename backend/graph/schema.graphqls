scalar Time

type User {
  id: ID!
  email: String!
  fullName: String!
  username: String!
  preferredCurrency: String!
  role(group_id: ID!): Role
  participatesIn: [Group!]!
}

input CreateUserInput {
  email: String!
  fullName: String!
  username: String!
  password: String!
  preferredCurrency: String = "EUR"
}

input EditUserInput {
  email: String
  fullName: String
  username: String
  password: String
  preferredCurrency: String
}

type Group {
  id: ID!
  name: String!
  created_at: Time
  members: [User!]!
}

input CreateGroupInput {
  name: String!
}

input EditGroupInput {
  name: String
}

type Expense {
  id: ID!
  user: User!
  group: Group!
  amount: Float!
  isMain: Boolean!
  name: String!
  currencyCode: String!
  lastModified: Time
}

input CreateExpenseInput {
  userId: ID!
  groupId: ID!
  amount: Float!
  isMain: Boolean!
  name: String!
  currencyCode: String = "EUR"
}

input EditExpenseInput {
  userId: ID
  groupId: ID
  amount: Float
  isMain: Boolean
  name: String
  currencyCode: String
}

type Role {
  id: ID!
  name: String!
}

input CreateRoleInput {
  name: String!
}

input EditRoleInput {
  name: String
}

type GroupUser {
  user: User!
  group: Group!
  role: Role!
}

input CreateGroupUserInput {
  userId: ID!
  groupId: ID!
  roleId: ID!
}

input EditGroupUserInput {
  userId: ID
  groupId: ID
  roleId: ID
}

type Query {
  users: [User!]!
  user(id: ID!): User!

  groups: [Group!]!
  group(id: ID!): Group!

  expenses: [Expense!]!
  expensesByGroup(groupId: ID!): [Expense!]!
  expensesByUser(userId: ID!): [Expense!]!
  expense(groupId: ID!, userId: ID!): Expense!

  roles: [Role!]!
  role(id: ID!): Role!

  groupUsers: [GroupUser!]!
  groupUsersByGroup(groupId: ID!): [GroupUser!]!
  groupUsersByUser(userId: ID!): [GroupUser!]!
  groupUser(groupId: ID!, userId: ID!): GroupUser!
}

type Mutation {
  addUser(user: CreateUserInput!): User!
  editUser(id: ID!, user: EditUserInput!): User!
  deleteUser(id: ID!): User!

  addGroup(group: CreateGroupInput!): Group!
  editGroup(id: ID!, group: EditGroupInput!): Group!
  deleteGroup(id: ID!): Group!

  addExpense(expense: CreateExpenseInput!): Expense!
  editExpense(id: ID!, expense: EditExpenseInput!): Expense!
  deleteExpense(id: ID!): Expense!

  addRole(role: CreateRoleInput!): Role!
  editRole(id: ID!, role: EditRoleInput!): Role!
  deleteRole(id: ID!): Role!

  addGroupUser(groupUser: CreateGroupUserInput!): GroupUser!
  editGroupUser(
    group_id: ID!
    user_id: ID!
    groupUser: EditGroupUserInput!
  ): GroupUser!
  deleteGroupUser(group_id: ID!, user_id: ID!): GroupUser!
}
